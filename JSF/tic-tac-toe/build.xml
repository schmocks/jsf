<!--
	(c) Bernd Müller, www.jsfpraxis.de
-->

<project name="Tic-Tac-Toe" default="install" basedir=".">

	<property name="app.name" value="ttt" />
	<property name="app.path" value="/${app.name}" />
	<property name="build.home" value="${basedir}/build" />
	<property name="src.home" value="${basedir}/src" />
	<property name="web.home" value="${basedir}/web" />
	
	<!-- Hier den Pfad zu Ihrem Tomcat eintragen -->
	<property name="catalina.home" value="/User/Stephan/apache-tomcat-7.0.52" />
	<!--property name="catalina.home" value="..\apache-tomcat-5.5.15" /-->
	<property name="dist.home" value="${basedir}/dist" />
	
	<!-- Deployen über Manager-Anwendung. Benutzer in tomcat-user.xml eintragen -->
	<property name="manager.url" value="http://localhost:8080/manager" />
	<property name="manager.username" value="tomcat" />
	<property name="manager.password" value="tomcat" />
	
	<!-- Bibliothek(en) -->
	<property name="lib.myfaces" value="${basedir}/../lib-myfaces" />

	<!-- Tomcat-Task-Definitionen aus catalina-ant.jar, muss bekannt sein -->
	<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" />
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" />
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" />

	<!-- Optionen  für Java-Compiler-->
	<property name="compile.debug" value="true" />
	<property name="compile.deprecation" value="true" />
	<property name="compile.optimize" value="true" />
	

	<!-- Ab hier in der Regel keine Änderungen nötig -->
	<path id="compile.classpath">
		<fileset dir="${lib.myfaces}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="prepare">
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<copy todir="${build.home}">
			<fileset dir="${web.home}" />
		</copy>
		<mkdir dir="${build.home}/WEB-INF/lib" />
		<copy todir="${build.home}/WEB-INF/lib">
			<fileset dir="${lib.myfaces}">
				<exclude name="**/catalina-ant.jar" />
				<exclude name="**/catalina-ant.readme" />
			</fileset>
		</copy>
	</target>

	<target name="clean" description="Altes Zeugs löschen">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
	</target>

	<target name="compile" depends="prepare" description="Klassen compilieren und kopieren">
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<javac srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" debug="${compile.debug}" deprecation="${compile.deprecation}" optimize="${compile.optimize}">
			<classpath refid="compile.classpath" />
		</javac>
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java" />
		</copy>
	</target>

	<target name="dist" depends="compile" description="WAR erzeugen">
		<mkdir dir="${dist.home}" />
		<jar jarfile="${dist.home}/${app.name}.war" basedir="${build.home}" />
	</target>

	<target name="install" depends="compile" description="Installieren (Tomcat)">
		<deploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" localWar="file://${build.home}" />
	</target>

	<target name="remove" description="Entfernen (Tomcat)">
		<undeploy url="${manager.url}" username="${manager.username}" password="${manager.password}" path="${app.path}" />
	</target>

</project>
